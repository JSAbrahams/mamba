language: rust

sudo: true
before_install:
  - sudo apt-get update

cache:
  cargo: true
  install:
    # Install kcov
    - wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz
    - tar xzf master.tar.gz
    - cd kcov-master
    - mkdir build
    - cd build
    - cmake ..
    - make
    - sudo make install
    - cd ../..
    - rm -rf kcov-master

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev

branches:
  only:
    - master

before_script:
  - rustup install stable
  - rustup install nightly
  - rustup component add rustfmt --toolchain nightly
  - rustup component add clippy

after_success:
  # Coverage report
  - bash <(curl -s https://codecov.io/bash)

script:
  # fail when formatting error encountered
  - cargo +nightly fmt --all -- --check
  # fail when encountering clippy warnings
  - cargo clippy -- -D warnings

  - cargo build --verbose
  - cargo test --verbose

  # Coverage report
  - for file in target/debug/deps/mamba-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done
  - for file in target/debug/deps/main-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done
  - for file in target/debug/deps/command-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done
