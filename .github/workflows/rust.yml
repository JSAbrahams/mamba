name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    strategy:
      matrix:
        os: [ "ubuntu-latest", "macos-latest" ]
        python: [ "3.8" ]
        rust: [ "nightly" ]

    runs-on: ${{ matrix.os }}

    name: OS ${{ matrix.os }}, Python v${{ matrix.python }}, Rust ${{ matrix.rust }}

    steps:
      - uses: actions/checkout@v2

      # Install Python
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Annotate commit with clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          args: --all-features

      # Install Rust, build and run tests
      - name: Install Rust ${{ matrix.rust }}
        run: rustup toolchain install ${{ matrix.rust }}

      - name: Build Nightly
        if: ${{ matrix.rust == 'nightly' }}
        run: cargo +nightly build
      - name: Run tests Nightly
        if: ${{ matrix.rust == 'nightly' }}
        run: cargo +nightly test --package mamba

      - name: Build
        if: ${{ matrix.rust != 'nightly' }}
        run: cargo build
      - name: Run tests
        if: ${{ matrix.rust != 'nightly' }}
        run: cargo test --package mamba

      # Code Coverage
      - name: Clean
        uses: actions-rs/toolchain@v1
        with:
          command: clean
          toolchain: nightly
          override: true

      - name: Grcov
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast  # Customize args for your own needs
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'

      - name: Coveralls upload
        uses: codecov/codecov-action@v2
